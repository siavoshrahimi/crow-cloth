{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { CartActionTypes } from \"./cartTypes\";\nimport { addItemToCart, removeItemFromCart } from \"./cartUtils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/cart/cartReducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","item","id","CLEAR_CART"],"mappings":";AAAA,SAAQA,eAAR,QAA8B,aAA9B;AACA,SAAQC,aAAR,EAAsBC,kBAAtB,QAA+C,aAA/C;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAC,IADW;AAElBC,EAAAA,SAAS,EAAC;AAFQ,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACJ,aAAP,EAAsBK,MAAtB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAIJ,SAAKJ,eAAe,CAACW,QAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAACJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAF3B;;AAIJ,SAAKZ,eAAe,CAACa,WAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFjC;;AAIJ,SAAKZ,eAAe,CAACc,oBAArB;AACI,+BACOP,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACI,OAAP,CAAeK,EAA1D;AAFf;;AAIJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,+BACOX,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ;AACI,aAAOE,KAAP;AA3BR;AA8BH,CA/BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import {CartActionTypes} from \"./cartTypes\";\r\nimport {addItemToCart,removeItemFromCart} from \"./cartUtils\";\r\n\r\nconst INITIAL_STATE = {\r\n    hidden:true,\r\n    cartItems:[]\r\n}\r\n\r\nconst cartReducer = (state=INITIAL_STATE, action) =>{\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return{\r\n                ...state,\r\n                hidden: !state.hidden\r\n            }\r\n        case CartActionTypes.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:addItemToCart(state.cartItems,action.payload)\r\n            }\r\n        case CartActionTypes.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: removeItemFromCart(state.cartItems,action.payload)\r\n            }\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\r\n            }\r\n        case CartActionTypes.CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}