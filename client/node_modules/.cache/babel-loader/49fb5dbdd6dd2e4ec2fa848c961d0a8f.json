{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shopTypes\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from \"./shopAction\";\nexport function* fetchCollectionAsync() {\n  yield console.log('I am afraid ');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {}\n\n  collectionRef.get().then(async snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFail","fetchCollectionsSuccess","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","then","dispatch","catch","massage","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,EAA+BC,uBAA/B,QAA6D,cAA7D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAiCS,QAAjC,CAAhC;AAEH,GALD,CAKC,OAAOG,KAAP,EAAc,CAEd;;AAEDL,EAAAA,aAAa,CAACG,GAAd,GAAoBG,IAApB,CAAyB,MAAMJ,QAAN,IAAkB;AACvC,UAAME,aAAa,GAAGX,+BAA+B,CAACS,QAAD,CAArD;AACAK,IAAAA,QAAQ,CAACX,uBAAuB,CAACQ,aAAD,CAAxB,CAAR;AACH,GAHD,EAGGI,KAHH,CAGSH,KAAK,IAAIE,QAAQ,CAACZ,oBAAoB,CAACU,KAAK,CAACI,OAAP,CAArB,CAH1B;AAIH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMrB,SAAS,CACXG,eAAe,CAACmB,uBADL,EAEXd,oBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFail,  fetchCollectionsSuccess} from \"./shopAction\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n    yield console.log('I am afraid ');\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n        \r\n    }catch (error) {\r\n\r\n    }\r\n\r\n    collectionRef.get().then(async snapshot => {\r\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionMap))\r\n    }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}