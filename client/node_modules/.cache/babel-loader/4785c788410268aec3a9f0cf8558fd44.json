{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shopAction\";\nimport CollectionOverviewContainer from '../../components/collection-overview/collectionOverviewContainer';\nimport CollectionPageContainer from \"../collection/collectionContainer\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    updateCollections();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectCollectionIsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/pages/shop/shop.js"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","CollectionOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","updateCollections","props","render","match","isCollectionLoaded","path","mapStateToProps","selectCollectionIsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,0BAAR,QAAyC,6BAAzC;AAGA,OAAOC,2BAAP,MAAwC,kEAAxC;AACA,OAAOC,uBAAP,MAAoC,mCAApC;;AAKA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAsC;AACnCC,EAAAA,iBAAiB,GAAG;AAAA,UACTC,iBADS,GACY,KAAKC,KADjB,CACTD,iBADS;AAEhBA,IAAAA,iBAAiB;AACpB;;AAEAE,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAKD,KADnC;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACQC,kBADR,eACQA,kBADR;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEV,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAET,uBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAdiC;;AAkBtC,MAAMU,eAAe,GAAGb,wBAAwB,CAAC;AAC7CW,EAAAA,kBAAkB,EAAGG;AADwB,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAI;AACnCT,EAAAA,iBAAiB,EAAE,MAAMS,QAAQ,CAACf,0BAA0B,EAA3B;AADE,CAAJ,CAAnC;;AAOA,eAAeF,OAAO,CAACc,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CX,QAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from \"reselect\";\r\n\r\nimport {fetchCollectionsStartAsync} from \"../../redux/shop/shopAction\";\r\n\r\n\r\nimport CollectionOverviewContainer from '../../components/collection-overview/collectionOverviewContainer';\r\nimport CollectionPageContainer from \"../collection/collectionContainer\";\r\n\r\n\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n   componentDidMount() {\r\n       const {updateCollections} = this.props;\r\n       updateCollections();\r\n   }\r\n\r\n    render() {\r\n        const {match,isCollectionLoaded} = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} component={CollectionOverviewContainer}/>\r\n                <Route path={`${match.path}/:collectionId`} component={CollectionPageContainer}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionLoaded : selectCollectionIsLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}