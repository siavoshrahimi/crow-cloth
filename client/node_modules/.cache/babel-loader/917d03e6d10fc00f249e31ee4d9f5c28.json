{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from \"../../redux/shop/shopAction\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\nimport CollectionOverview from '../../components/collection-overview/collectionOverview';\nimport CollectionPage from \"../collection/collection\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/pages/shop/shop.js"],"names":["React","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","withSpinner","CollectionOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","isLoading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,iBAAR,QAAgC,6BAAhC;AAEA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAGA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAIA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC5B;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAD4B;AAAA,SAEjCC,uBAFiC,GAEP,IAFO;AAAA;;AAIjCC,EAAAA,iBAAiB,GAAG;AAAA,UACTb,iBADS,GACY,KAAKc,KADjB,CACTd,iBADS;AAEhB,UAAMe,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACtC,YAAMC,aAAa,GAAGjB,+BAA+B,CAACgB,QAAD,CAArD;AACAlB,MAAAA,iBAAiB,CAACmB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAC;AAAX,OAAd;AACH,KAJD;AAKH;;AAEFU,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKR,KADhB,CACEQ,KADF;AAAA,UAEEX,SAFF,GAEe,KAAKD,KAFpB,CAEEC,SAFF;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAAjC;AACO,MAAA,MAAM,EAAET,KAAK,IAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAyDG,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAET,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUH;;AA5BiC;;AAgCtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAI;AACnCzB,EAAAA,iBAAiB,EAAEmB,aAAa,IAAIM,QAAQ,CAACzB,iBAAiB,CAACmB,aAAD,CAAlB;AADT,CAAJ,CAAnC;;AAOA,eAAepB,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {updateCollections} from \"../../redux/shop/shopAction\";\r\n\r\nimport {firestore,convertCollectionsSnapshotToMap} from \"../../firebase/firebase.utils\";\r\n\r\n\r\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\r\nimport CollectionOverview from '../../components/collection-overview/collectionOverview';\r\nimport CollectionPage from \"../collection/collection\";\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n    state={isLoading: true};\r\n     unsubscribeFromSnapshot = null;\r\n\r\n     componentDidMount() {\r\n         const {updateCollections} = this.props;\r\n         const collectionRef = firestore.collection('collections');\r\n\r\n         collectionRef.onSnapshot(async snapshot =>{\r\n             const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n             updateCollections(collectionMap);\r\n             this.setState({isLoading:false});\r\n         })\r\n     }\r\n\r\n    render() {\r\n        const {match} = this.props;\r\n        const {isLoading} = this.state;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`}\r\n                       render={props => <CollectionOverviewWithSpinner isLoading={isLoading} {...props} />}\r\n                />\r\n                <Route path={`${match.path}/:collectionId`}\r\n                       render={props => <CollectionPageWithSpinner isLoading={isLoading} {...props}/>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}