{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shopTypes\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from \"./shopAction\";\nexport function* fetchCollectionAsync() {\n  yield console.log('I am afraid ');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = collectionRef.get();\n  collectionRef.get().then(async snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFail","fetchCollectionsSuccess","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","then","collectionMap","dispatch","catch","error","massage","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,EAA+BC,uBAA/B,QAA6D,cAA7D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAGF,aAAa,CAACG,GAAd,EAAjB;AAEAH,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyB,MAAMF,QAAN,IAAkB;AACvC,UAAMG,aAAa,GAAGZ,+BAA+B,CAACS,QAAD,CAArD;AACAI,IAAAA,QAAQ,CAACV,uBAAuB,CAACS,aAAD,CAAxB,CAAR;AACH,GAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIF,QAAQ,CAACX,oBAAoB,CAACa,KAAK,CAACC,OAAP,CAArB,CAH1B;AAIH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXd,oBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFail,  fetchCollectionsSuccess} from \"./shopAction\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n    yield console.log('I am afraid ');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = collectionRef.get();\r\n\r\n    collectionRef.get().then(async snapshot => {\r\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionMap))\r\n    }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}