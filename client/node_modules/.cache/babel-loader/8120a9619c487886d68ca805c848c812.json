{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching, selectCollectionIsLoaded } from \"../../redux/shop/shopSelector\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shopAction\";\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\nimport CollectionOverviewContainer from '../../components/collection-overview/collectionOverviewContainer';\nimport CollectionPage from \"../collection/collection\";\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    updateCollections();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: React.createElement(\"collectionOverviewContainer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectCollectionIsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/pages/shop/shop.js"],"names":["React","Route","connect","createStructuredSelector","selectIsCollectionFetching","selectCollectionIsLoaded","fetchCollectionsStartAsync","withSpinner","CollectionOverviewContainer","CollectionPage","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","updateCollections","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,0BAAR,EAAmCC,wBAAnC,QAAkE,+BAAlE;AACA,SAAQC,0BAAR,QAAyC,6BAAzC;AAGA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,2BAAP,MAAwC,kEAAxC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,yBAAyB,GAAGH,WAAW,CAACE,cAAD,CAA7C;;AAIA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AACnCC,EAAAA,iBAAiB,GAAG;AAAA,UACTC,iBADS,GACY,KAAKC,KADjB,CACTD,iBADS;AAEhBA,IAAAA,iBAAiB;AACpB;;AAEAE,EAAAA,MAAM,GAAG;AAAA,wBACmD,KAAKD,KADxD;AAAA,UACEE,KADF,eACEA,KADF;AAAA,UACQC,oBADR,eACQA,oBADR;AAAA,UAC6BC,kBAD7B,eAC6BA,kBAD7B;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEH,KAAK,CAACG,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAEL,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAA+DJ,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AASH;;AAjBiC;;AAqBtC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEd,0BADuB;AAE7Ce,EAAAA,kBAAkB,EAAGd;AAFwB,CAAD,CAAhD;;AAKA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCT,EAAAA,iBAAiB,EAAE,MAAMS,QAAQ,CAACjB,0BAA0B,EAA3B;AADE,CAAJ,CAAnC;;AAOA,eAAeJ,OAAO,CAACmB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CX,QAA5C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from \"reselect\";\r\n\r\nimport {selectIsCollectionFetching,selectCollectionIsLoaded} from \"../../redux/shop/shopSelector\";\r\nimport {fetchCollectionsStartAsync} from \"../../redux/shop/shopAction\";\r\n\r\n\r\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\r\nimport CollectionOverviewContainer from '../../components/collection-overview/collectionOverviewContainer';\r\nimport CollectionPage from \"../collection/collection\";\r\n\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n   componentDidMount() {\r\n       const {updateCollections} = this.props;\r\n       updateCollections();\r\n   }\r\n\r\n    render() {\r\n        const {match,isCollectionFetching,isCollectionLoaded} = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`} component={<collectionOverviewContainer/>}\r\n                />\r\n                <Route path={`${match.path}/:collectionId`}\r\n                       render={props => <CollectionPageWithSpinner isLoading={!isCollectionLoaded} {...props}/>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded : selectCollectionIsLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}