{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\components\\\\signUp\\\\signUp.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from \"../formInput/formInput\";\nimport Button from \"../button/button\";\nimport { signUpStart } from \"../../redux/user/userAction\";\nimport { SignUpContainer, SignUpTitle } from \"./signUp.styles\";\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    this.handelSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const signUpStart = this.props.signUpStart;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      signUpStart({\n        email,\n        password,\n        displayName\n      });\n      this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    };\n\n    this.handelChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(SignUpContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(SignUpTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"I don't have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign up with email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handelSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"displayName\",\n      value: displayName,\n      label: \"User Name\",\n      onChange: this.handelChange,\n      required: true,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      required: true,\n      name: \"email\",\n      value: email,\n      label: \"email\",\n      onChange: this.handelChange,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      required: true,\n      name: \"password\",\n      value: password,\n      label: \"Password\",\n      onChange: this.handelChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      required: true,\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      label: \"Confirm Password\",\n      onChange: this.handelChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/components/signUp/signUp.js"],"names":["React","connect","FormInput","Button","signUpStart","SignUpContainer","SignUpTitle","SignUp","Component","state","displayName","email","password","confirmPassword","handelSubmit","event","preventDefault","props","alert","setState","handelChange","target","value","name","render","mapDispatchToProps","dispatch","userCredential"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from \"../formInput/formInput\";\r\nimport Button from \"../button/button\";\r\n\r\n\r\nimport {signUpStart} from \"../../redux/user/userAction\";\r\n\r\nimport {SignUpContainer,SignUpTitle} from \"./signUp.styles\";\r\n\r\nclass SignUp extends React.Component{\r\n    state={\r\n        displayName:'',\r\n        email: '',\r\n        password:'',\r\n        confirmPassword:''\r\n    }\r\n    handelSubmit = async event =>{\r\n        event.preventDefault();\r\n        const {displayName, email,password,confirmPassword} = this.state;\r\n        const {signUpStart} = this.props;\r\n\r\n        if(password !== confirmPassword){\r\n            alert(\"Passwords don't match\");\r\n            return;\r\n        }\r\n        signUpStart({email,password,displayName});\r\n        \r\n        this.setState({\r\n            displayName:'',\r\n            email: '',\r\n            password:'',\r\n            confirmPassword:''\r\n        })\r\n    }\r\n\r\n    handelChange= event =>{\r\n        const {value,name} = event.target;\r\n        this.setState({[name]:value})\r\n    }\r\n\r\n    render() {\r\n        const {displayName, email,password,confirmPassword} = this.state;\r\n        return(\r\n            <SignUpContainer>\r\n                <SignUpTitle>I don't have an account</SignUpTitle>\r\n                <span>Sign up with email and password</span>\r\n                <form className='sign-up-form' onSubmit={this.handelSubmit}>\r\n                    <FormInput\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        label='User Name'\r\n                        onChange={this.handelChange}\r\n                        required\r\n                        type='text'\r\n                    />\r\n                    <FormInput\r\n                        required\r\n                        name='email'\r\n                        value={email}\r\n                        label='email'\r\n                        onChange={this.handelChange}\r\n                        type='email'\r\n                    />\r\n                    <FormInput\r\n                        required\r\n                        name='password'\r\n                        value={password}\r\n                        label='Password'\r\n                        onChange={this.handelChange}\r\n                        type='password'\r\n                    />\r\n                    <FormInput\r\n                        required\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        label='Confirm Password'\r\n                        onChange={this.handelChange}\r\n                        type='password'\r\n                    />\r\n                    <Button type='submit'>SIGN UP</Button>\r\n                </form>\r\n            </SignUpContainer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: userCredential => dispatch(signUpStart(userCredential))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}