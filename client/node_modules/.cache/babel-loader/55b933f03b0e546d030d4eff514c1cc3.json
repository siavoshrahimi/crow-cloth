{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\components\\\\signIn\\\\signIn.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/userAction\";\nimport FormInput from \"../formInput/formInput\";\nimport Button from \"../button/button\";\nimport { SignInContainer, ButtonContainer, SignInTitle } from \"./signIn.styles\";\n\nclass SignIn extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.submitHandler = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const emailSignInStart = this.props.emailSignInStart;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(SignInContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(SignInTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"I have already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      required: true,\n      onChange: this.handleChange,\n      label: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      required: true,\n      onChange: this.handleChange,\n      label: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(ButtonContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Button, {\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, '', \"Sign In with Google\", ''))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/components/signIn/signIn.js"],"names":["React","connect","googleSignInStart","emailSignInStart","FormInput","Button","SignInContainer","ButtonContainer","SignInTitle","SignIn","Component","state","email","password","submitHandler","event","preventDefault","props","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,SAAQC,iBAAR,EAA0BC,gBAA1B,QAAiD,6BAAjD;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAAQC,eAAR,EAAwBC,eAAxB,EAAwCC,WAAxC,QAA0D,iBAA1D;;AAEA,MAAMC,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAChCC,KADgC,GAC1B;AACFC,MAAAA,KAAK,EAAC,EADJ;AAEFC,MAAAA,QAAQ,EAAC;AAFP,KAD0B;;AAAA,SAKhCC,aALgC,GAKhB,MAAMC,KAAN,IAAc;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAD0B,0BAED,KAAKL,KAFJ;AAAA,YAEnBC,KAFmB,eAEnBA,KAFmB;AAAA,YAEbC,QAFa,eAEbA,QAFa;AAAA,YAGnBV,gBAHmB,GAGC,KAAKc,KAHN,CAGnBd,gBAHmB;AAK1BA,MAAAA,gBAAgB,CAACS,KAAD,EAAOC,QAAP,CAAhB;AACH,KAX+B;;AAAA,SAYhCK,YAZgC,GAYjBH,KAAK,IAAG;AAAA,4BACEA,KAAK,CAACI,MADR;AAAA,YACZC,IADY,iBACZA,IADY;AAAA,YACPC,KADO,iBACPA,KADO;AAEnB,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAASC;AAAV,OAAd;AACH,KAf+B;AAAA;;AAgBhCE,EAAAA,MAAM,GAAG;AAAA,UACErB,iBADF,GACuB,KAAKe,KAD5B,CACEf,iBADF;AAEL,WACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,EAGI;AAAM,MAAA,QAAQ,EAAE,KAAKY,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AACO,MAAA,IAAI,EAAC,OADZ;AAEO,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAFzB;AAGO,MAAA,QAAQ,MAHf;AAIO,MAAA,QAAQ,EAAE,KAAKM,YAJtB;AAKO,MAAA,KAAK,EAAC,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,UAAhB;AACO,MAAA,IAAI,EAAC,UADZ;AAEO,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,QAFzB;AAGO,MAAA,QAAQ,MAHf;AAIO,MAAA,QAAQ,EAAE,KAAKK,YAJtB;AAKO,MAAA,KAAK,EAAC,UALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAiBI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEhB,iBADb;AAEI,MAAA,cAAc,MAFlB;AAGI,MAAA,IAAI,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,EALL,yBAK4B,EAL5B,CAFJ,CAjBJ,CAHJ,CADJ;AAkCH;;AApD+B;;AAuDpC,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCvB,EAAAA,iBAAiB,EAAE,MAAOuB,QAAQ,CAACvB,iBAAiB,EAAlB,CADC;AAEnCC,EAAAA,gBAAgB,EAAE,CAACS,KAAD,EAAOC,QAAP,KAAmBY,QAAQ,CAACtB,gBAAgB,CAAC;AAACS,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB;AAFV,CAAJ,CAAnC;;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAMuB,kBAAN,CAAP,CAAiCf,MAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport {googleSignInStart,emailSignInStart} from \"../../redux/user/userAction\";\r\n\r\nimport FormInput from \"../formInput/formInput\";\r\nimport Button from \"../button/button\";\r\n\r\nimport {SignInContainer,ButtonContainer,SignInTitle} from \"./signIn.styles\";\r\n\r\nclass SignIn extends React.Component{\r\n    state={\r\n        email:'',\r\n        password:''\r\n    }\r\n    submitHandler = async event =>{\r\n        event.preventDefault();\r\n        const {email,password} = this.state;\r\n        const {emailSignInStart} = this.props;\r\n\r\n        emailSignInStart(email,password);\r\n    }\r\n    handleChange = event =>{\r\n        const {name,value} = event.target;\r\n        this.setState({[name] : value})\r\n    }\r\n    render() {\r\n        const {googleSignInStart} = this.props;\r\n        return(\r\n            <SignInContainer>\r\n                <SignInTitle>I have already have an account</SignInTitle>\r\n                <span>Sign in with your email and password</span>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <FormInput type=\"email\"\r\n                           name='email'\r\n                           value={this.state.email}\r\n                           required\r\n                           onChange={this.handleChange}\r\n                           label='email'\r\n                    />\r\n\r\n                    <FormInput type=\"password\"\r\n                           name='password'\r\n                           value={this.state.password}\r\n                           required\r\n                           onChange={this.handleChange}\r\n                           label='password'\r\n                    />\r\n\r\n                    <ButtonContainer>\r\n                        <Button type=\"submit\" >Sign In</Button>\r\n                        <Button\r\n                            onClick={googleSignInStart}\r\n                            isGoogleSignIn\r\n                            type=\"button\"\r\n                        >\r\n                            {''}Sign In with Google{''}\r\n                        </Button>\r\n                    </ButtonContainer>\r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart: () =>  dispatch(googleSignInStart()),\r\n    emailSignInStart: (email,password) =>dispatch(emailSignInStart({email,password}))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}