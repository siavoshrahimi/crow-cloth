{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shopTypes\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from \"./shopAction\";\nexport function* fetchCollectionAsync() {\n  yield console.log('I am afraid ');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFail(error.message));\n  }\n\n  collectionRef.get().then(async snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFail","fetchCollectionsSuccess","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","message","then","dispatch","catch","massage","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,EAA+BC,uBAA/B,QAA6D,cAA7D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAiCS,QAAjC,CAAhC;AACA,UAAMX,GAAG,CAACK,uBAAuB,CAACQ,aAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAOC,KAAP,EAAc;AACX,UAAMd,GAAG,CAACI,oBAAoB,CAACU,KAAK,CAACC,OAAP,CAArB,CAAT;AACH;;AAEDN,EAAAA,aAAa,CAACG,GAAd,GAAoBI,IAApB,CAAyB,MAAML,QAAN,IAAkB;AACvC,UAAME,aAAa,GAAGX,+BAA+B,CAACS,QAAD,CAArD;AACAM,IAAAA,QAAQ,CAACZ,uBAAuB,CAACQ,aAAD,CAAxB,CAAR;AACH,GAHD,EAGGK,KAHH,CAGSJ,KAAK,IAAIG,QAAQ,CAACb,oBAAoB,CAACU,KAAK,CAACK,OAAP,CAArB,CAH1B;AAIH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMtB,SAAS,CACXG,eAAe,CAACoB,uBADL,EAEXf,oBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFail,  fetchCollectionsSuccess} from \"./shopAction\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n    yield console.log('I am afraid ');\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionMap))\r\n    }catch (error) {\r\n        yield put(fetchCollectionsFail(error.message))\r\n    }\r\n\r\n    collectionRef.get().then(async snapshot => {\r\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionMap))\r\n    }).catch(error => dispatch(fetchCollectionsFail(error.massage)));\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}