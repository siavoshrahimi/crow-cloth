{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shopAction\";\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\nimport CollectionOverview from '../../components/collection-overview/collectionOverview';\nimport CollectionPage from \"../collection/collection\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector();\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(fetchCollectionsStartAsync(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/pages/shop/shop.js"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","withSpinner","CollectionOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","render","match","props","path","isLoading","mapStateToProps","mapDispatchToProps","dispatch","updateCollections","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,0BAAR,QAAyC,6BAAzC;AAGA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAIA,MAAMG,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAsC;AACnCC,EAAAA,iBAAiB,GAAG,CACnB;;AAEAC,EAAAA,MAAM,GAAG;AAAA,UACEC,KADF,GACW,KAAKC,KADhB,CACED,KADF;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AACO,MAAA,MAAM,EAAED,KAAK,IAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEE;AAA1C,SAAyDF,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAED,KAAK,IAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEE;AAAtC,SAAqDF,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUH;;AAhBiC;;AAoBtC,MAAMG,eAAe,GAAGf,wBAAwB,EAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCC,EAAAA,iBAAiB,EAAEC,aAAa,IAAIF,QAAQ,CAAChB,0BAA0B,CAACkB,aAAD,CAA3B;AADT,CAAJ,CAAnC;;AAOA,eAAepB,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCT,QAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from \"reselect\";\r\n\r\nimport {fetchCollectionsStartAsync} from \"../../redux/shop/shopAction\";\r\n\r\n\r\nimport withSpinner from \"../../components/with-spinner/withSpinner\";\r\nimport CollectionOverview from '../../components/collection-overview/collectionOverview';\r\nimport CollectionPage from \"../collection/collection\";\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CollectionPage);\r\n\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n   componentDidMount() {\r\n   }\r\n\r\n    render() {\r\n        const {match} = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={`${match.path}`}\r\n                       render={props => <CollectionOverviewWithSpinner isLoading={isLoading} {...props} />}\r\n                />\r\n                <Route path={`${match.path}/:collectionId`}\r\n                       render={props => <CollectionPageWithSpinner isLoading={isLoading} {...props}/>}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector(\r\n\r\n)\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: collectionMap => dispatch(fetchCollectionsStartAsync(collectionMap))\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}