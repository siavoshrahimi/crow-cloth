{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from \"./shopTypes\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFail, fetchCollectionsSuccess } from \"./shopAction\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFail(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFail","fetchCollectionsSuccess","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,oBAAR,EAA+BC,uBAA/B,QAA6D,cAA7D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AAEpC,MAAG;AACC,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAiCO,QAAjC,CAAhC;AACA,UAAMT,GAAG,CAACK,uBAAuB,CAACM,aAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAOC,KAAP,EAAc;AACX,UAAMZ,GAAG,CAACI,oBAAoB,CAACQ,KAAK,CAACC,OAAP,CAArB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMhB,UAAU,CACZG,eAAe,CAACc,uBADJ,EAEZT,oBAFY,CAAhB;AAIH","sourcesContent":["import {takeLatest,call,put} from 'redux-saga/effects';\r\n\r\nimport ShopActionTypes from \"./shopTypes\";\r\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\r\nimport {fetchCollectionsFail,  fetchCollectionsSuccess} from \"./shopAction\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionMap))\r\n    }catch (error) {\r\n        yield put(fetchCollectionsFail(error.message))\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCollectionStart() {\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}