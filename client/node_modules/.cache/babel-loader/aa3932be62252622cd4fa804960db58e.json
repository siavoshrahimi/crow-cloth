{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\programing\\\\webstorm project\\\\crown-cloth\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionType from \"./userType\";\nimport { googleProvider, auth, creatUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./userAction\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(creatUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionType.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionType.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/programing/webstorm project/crown-cloth/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionType","googleProvider","auth","creatUserProfileDocument","signInFailure","signInSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSaga"],"mappings":";AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AAEA,OAAOC,cAAP,MAA2B,YAA3B;AAEA,SAAQC,cAAR,EAAuBC,IAAvB,EAA4BC,wBAA5B,QAA2D,+BAA3D;AAEA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,cAA1C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,wBAAD,EAA0BI,QAA1B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACQ,aAAa;AAAEM,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAA0BF,YAAY,CAACG,IAAb,EAA1B,EAAd,CAAT;AACH,GAJD,CAIC,OAAOC,KAAP,EAAc;AACX,UAAMhB,GAAG,CAACO,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACgB,MAAMZ,IAAI,CAACa,eAAL,CAAqBd,cAArB,CADtB;AAAA,UACQe,IADR,QACQA,IADR;;AAECV,IAAAA,uBAAuB,CAACU,IAAD,CAAvB;AACH,GAHD,CAGC,OAAOH,KAAP,EAAc;AACX,UAAMhB,GAAG,CAACO,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,mBAAV,GAAgC;AACtC,QAAMrB,UAAU,CACZI,cAAc,CAACkB,oBADH,EAEZJ,gBAFY,CAAhB;AAIA;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AAAA,kBACgB,MAAMpB,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQN,IADR,SACQA,IADR;AAIF,GAJD,CAIC,OAAMH,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACO,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAM5B,UAAU,CACZI,cAAc,CAACyB,mBADH,EAEZN,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUO,QAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA2BlB,IAAI,CAACyB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\n\r\nimport UserActionType from \"./userType\";\r\n\r\nimport {googleProvider,auth,creatUserProfileDocument} from \"../../firebase/firebase.utils\";\r\n\r\nimport {signInFailure,signInSuccess} from \"./userAction\";\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n        const userRef = yield call(creatUserProfileDocument,userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:userSnapshot.id , ...userSnapshot.data()}))\r\n    }catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        getSnapshotFromUserAuth(user);\r\n    }catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n yield takeLatest(\r\n     UserActionType.GOOGLE_SIGN_IN_START,\r\n     signInWithGoogle\r\n )\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        \r\n\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(\r\n        UserActionType.EMAIL_SIGN_IN_START,\r\n        signInWithEmail\r\n    )\r\n}\r\n\r\nexport function* userSaga() {\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}